{"ast":null,"code":"export var yearValidation = function yearValidation(val) {\n  if (isNaN(val) || val.length != 4 || val < 0) {\n    return {\n      status: 'error',\n      msg: 'year is not valid'\n    };\n  }\n\n  return {\n    status: 'ok'\n  };\n};\nexport var runtimeValidation = function runtimeValidation(val) {\n  if (isNaN(val) || val < 0) {\n    return {\n      status: 'error',\n      msg: 'year is not valid'\n    };\n  }\n\n  return {\n    status: 'ok'\n  };\n};\nexport var genreValidation = function genreValidation(val) {\n  var letters = /^[A-Za-z]{2,}\\s[A-Za-z-']{3,}$/;\n  var genre = val.split(',');\n  var filterGenre = ['romance', 'action', 'adventure', 'honor', 'western', 'documentary', 'crime', 'science fiction', 'war', 'mystery', 'comedy', 'biographical', 'parody', 'melodrama', 'family', 'drama'];\n  var result = false;\n  genre.forEach(function (item, index) {\n    if (item.charAt(0) == ' ') {\n      genre[index] = item.substr(1);\n    }\n  });\n\n  for (var i = 0; i < genre.length; ++i) {\n    result = false;\n\n    for (var j = 0; j < filterGenre.length; ++j) {\n      if (genre[i].toUpperCase() === filterGenre[j].toUpperCase()) {\n        result = true;\n        j = filterGenre.length;\n      }\n    }\n\n    if (!result) {\n      return {\n        status: 'error',\n        msg: 'input is not valid'\n      };\n    }\n  }\n\n  return {\n    status: 'ok'\n  };\n};\nexport var directorValidation = function directorValidation(val) {\n  var letters = /^[A-Za-z]{2,}\\s[A-Za-z-']{2,}$/;\n  var director = val.split(',');\n  var filterDirector = [];\n  director.forEach(function (item, index) {\n    if (item.charAt(0) == ' ') {\n      director[index] = item.substr(1);\n    }\n  });\n  filterDirector = director.filter(function (item, index) {\n    return !letters.test(item);\n  });\n\n  if (filterDirector.length > 0) {\n    return {\n      status: 'error',\n      msg: 'input is not valid'\n    };\n  }\n\n  return {\n    status: 'ok'\n  };\n};\nexport var capitalizeFirstLetter = function capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\nexport var cleanStringFromJunk = function cleanStringFromJunk(stringArray) {\n  var regex = /[^A-Za-z0-9]+$/;\n\n  for (var i = 0; i < stringArray.length; ++i) {\n    if (!regex.test(stringArray[i])) {\n      stringArray.splice(0, 1);\n    }\n  }\n\n  return stringArray;\n};\nexport var cleanNumberAtMiddleOfWord = function cleanNumberAtMiddleOfWord(stringArray) {\n  var regex = /^[A-Za-z-']{1,}$/;\n\n  for (var i = 0; i < stringArray.length - 1; ++i) {\n    if (!regex.test(stringArray[i])) {\n      stringArray.splice(0, 1);\n    }\n  }\n\n  return stringArray;\n};\nexport var arrayToString = function arrayToString(stringArray) {\n  var output = stringArray.toString();\n  output = output.replace(',', ' ');\n  return output;\n};","map":{"version":3,"sources":["C:\\Users\\shalombar\\Desktop\\moviesLibrary\\my-app\\src\\common\\functions\\functions.js"],"names":["yearValidation","val","isNaN","length","status","msg","runtimeValidation","genreValidation","letters","genre","split","filterGenre","result","forEach","item","index","charAt","substr","i","j","toUpperCase","directorValidation","director","filterDirector","filter","test","capitalizeFirstLetter","str","slice","cleanStringFromJunk","stringArray","regex","splice","cleanNumberAtMiddleOfWord","arrayToString","output","toString","replace"],"mappings":"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","sourcesContent":["export const yearValidation = (val) => {\r\n    if (isNaN(val) || val.length != 4 || val < 0) {\r\n        return {\r\n            status: 'error',\r\n            msg: 'year is not valid'\r\n        }\r\n    }\r\n    return { status: 'ok' }\r\n}\r\n\r\nexport const runtimeValidation = (val) => {\r\n    if (isNaN(val) || val < 0) {\r\n        return {\r\n            status: 'error',\r\n            msg: 'year is not valid'\r\n        }\r\n    }\r\n    return { status: 'ok' }\r\n}\r\n\r\nexport const genreValidation = (val) => {\r\n    let letters = /^[A-Za-z]{2,}\\s[A-Za-z-']{3,}$/;\r\n    let genre = val.split(',');\r\n    let filterGenre = ['romance', 'action', 'adventure', 'honor', 'western', 'documentary', 'crime', 'science fiction', 'war', 'mystery', 'comedy', 'biographical', 'parody', 'melodrama', 'family', 'drama'];\r\n    let result = false;\r\n\r\n    genre.forEach((item, index) => {\r\n        if (item.charAt(0) == ' ') {\r\n            genre[index] = item.substr(1);\r\n        }\r\n    });\r\n\r\n    for (var i = 0; i < genre.length; ++i) {\r\n        result = false;\r\n        for (var j = 0; j < filterGenre.length; ++j) {\r\n            if (genre[i].toUpperCase() === filterGenre[j].toUpperCase()) {\r\n                result = true;\r\n                j = filterGenre.length;\r\n            }\r\n        }\r\n        if (!result) {\r\n            return {\r\n                status: 'error',\r\n                msg: 'input is not valid'\r\n            }\r\n        }\r\n    }\r\n\r\n    return { status: 'ok' }\r\n}\r\n\r\nexport const directorValidation = (val) => {\r\n    let letters = /^[A-Za-z]{2,}\\s[A-Za-z-']{2,}$/;\r\n    let director = val.split(',');\r\n    let filterDirector = [];\r\n\r\n    director.forEach((item, index) => {\r\n        if (item.charAt(0) == ' ') {\r\n            director[index] = item.substr(1);\r\n        }\r\n    });\r\n\r\n    filterDirector = director.filter((item, index) => {\r\n        return !letters.test(item)\r\n    })\r\n\r\n    if (filterDirector.length > 0) {\r\n        return {\r\n            status: 'error',\r\n            msg: 'input is not valid'\r\n        }\r\n    }\r\n    return { status: 'ok' }\r\n}\r\n\r\nexport const capitalizeFirstLetter = (str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nexport const cleanStringFromJunk = (stringArray) => {\r\n    let regex = /[^A-Za-z0-9]+$/;\r\n\r\n    for (var i = 0; i < stringArray.length; ++i) {\r\n        if (!regex.test(stringArray[i])) {\r\n            stringArray.splice(0, 1);\r\n        }\r\n    }\r\n    return stringArray;\r\n}\r\n\r\nexport const cleanNumberAtMiddleOfWord = (stringArray) => {\r\n    let regex = /^[A-Za-z-']{1,}$/;\r\n\r\n    for (var i = 0; i < stringArray.length - 1; ++i) {\r\n        if (!regex.test(stringArray[i])) {\r\n            stringArray.splice(0, 1);\r\n        }\r\n    }\r\n    return stringArray;\r\n}\r\n\r\nexport const arrayToString = (stringArray) => {\r\n    let output = stringArray.toString();\r\n\r\n    output = output.replace(',', ' ');\r\n\r\n    return output;\r\n}"]},"metadata":{},"sourceType":"module"}