{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\my-new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  state = _objectSpread({\n    moviesList: [],\n    openModalKey: -99,\n    isMovieExist: false\n  }, state);\n\n  switch (action.type) {\n    case 'GET_MOVIES_LIST':\n      var moviesList = action.payload;\n      return _objectSpread({}, state, {\n        moviesList: moviesList\n      });\n\n    case 'SET_OPEN_MODAL_KEY':\n      var openModalKey = action.payload;\n      return _objectSpread({}, state, {\n        openModalKey: openModalKey\n      });\n\n    case 'UPDATE':\n      var newData = action.payload;\n      return _objectSpread({}, state, {\n        moviesList: newData\n      });\n\n    case 'DELETE':\n      newData = action.payload;\n      return _objectSpread({}, state, {\n        moviesList: newData\n      });\n\n    case 'ADD':\n      var currnetMoviesList = state.moviesList;\n      var addData = action.payload;\n      currnetMoviesList.push(addData);\n      return _objectSpread({}, state, {\n        moviesList: currnetMoviesList\n      });\n\n    case 'IS_MOVIE_EXIST':\n      var isMovieExist = action.payload;\n      return _objectSpread({}, state, {\n        isMovieExist: isMovieExist\n      });\n\n    default:\n      return state;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:\\Users\\shalombar\\Desktop\\my-new-app\\src\\reducers\\general.red.js"],"names":["state","action","moviesList","openModalKey","isMovieExist","type","payload","newData","currnetMoviesList","addData","push"],"mappings":";AAAA,gBAAe,YAAwB;AAAA,MAAvBA,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACnCD,EAAAA,KAAK;AACDE,IAAAA,UAAU,EAAE,EADX;AAEDC,IAAAA,YAAY,EAAE,CAAC,EAFd;AAGDC,IAAAA,YAAY,EAAE;AAHb,KAIEJ,KAJF,CAAL;;AAMA,UAAQC,MAAM,CAACI,IAAf;AACI,SAAK,iBAAL;AACI,UAAIH,UAAU,GAAGD,MAAM,CAACK,OAAxB;AAEA,+BACON,KADP;AAEIE,QAAAA,UAAU,EAAEA;AAFhB;;AAIJ,SAAK,oBAAL;AACI,UAAIC,YAAY,GAAGF,MAAM,CAACK,OAA1B;AAEA,+BACON,KADP;AAEIG,QAAAA,YAAY,EAAEA;AAFlB;;AAIJ,SAAK,QAAL;AACI,UAAII,OAAO,GAAGN,MAAM,CAACK,OAArB;AAEA,+BACON,KADP;AAEIE,QAAAA,UAAU,EAAEK;AAFhB;;AAIJ,SAAK,QAAL;AACIA,MAAAA,OAAO,GAAGN,MAAM,CAACK,OAAjB;AAEA,+BACON,KADP;AAEIE,QAAAA,UAAU,EAAEK;AAFhB;;AAIJ,SAAK,KAAL;AACI,UAAIC,iBAAiB,GAAGR,KAAK,CAACE,UAA9B;AACA,UAAIO,OAAO,GAAGR,MAAM,CAACK,OAArB;AAEAE,MAAAA,iBAAiB,CAACE,IAAlB,CAAuBD,OAAvB;AAEA,+BACOT,KADP;AAEIE,QAAAA,UAAU,EAAEM;AAFhB;;AAIJ,SAAK,gBAAL;AACI,UAAIJ,YAAY,GAAGH,MAAM,CAACK,OAA1B;AAEA,+BACON,KADP;AAEII,QAAAA,YAAY,EAAEA;AAFlB;;AAIJ;AACI,aAAOJ,KAAP;AA/CR;;AAiDA,SAAOA,KAAP;AACH,CAzDD","sourcesContent":["export default (state = {}, action) => {\r\n    state = {\r\n        moviesList: [],\r\n        openModalKey: -99,\r\n        isMovieExist: false,\r\n        ...state\r\n    }\r\n    switch (action.type) {\r\n        case 'GET_MOVIES_LIST':\r\n            let moviesList = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                moviesList: moviesList\r\n            }\r\n        case 'SET_OPEN_MODAL_KEY':\r\n            let openModalKey = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                openModalKey: openModalKey\r\n            }\r\n        case 'UPDATE':\r\n            let newData = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                moviesList: newData\r\n            }\r\n        case 'DELETE':\r\n            newData = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                moviesList: newData\r\n            }\r\n        case 'ADD':\r\n            let currnetMoviesList = state.moviesList;\r\n            let addData = action.payload;\r\n\r\n            currnetMoviesList.push(addData);\r\n\r\n            return {\r\n                ...state,\r\n                moviesList: currnetMoviesList\r\n            }\r\n        case 'IS_MOVIE_EXIST':\r\n            let isMovieExist = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                isMovieExist: isMovieExist\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    return state;\r\n}"]},"metadata":{},"sourceType":"module"}