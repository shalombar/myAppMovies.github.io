{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\src\\\\common\\\\Movies\\\\movie\\\\MovieDetails\\\\Buttons.js\";\nimport React, { Component } from 'react';\nimport '../../../../css/movies/movies.css';\nimport * as Functions from '../../../functions/functions';\n\nvar Buttons =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Buttons, _Component);\n\n  function Buttons(props) {\n    var _this;\n\n    _classCallCheck(this, Buttons);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Buttons).call(this, props));\n    _this.state = {\n      \"imdbID\": '',\n      year: '',\n      runtime: '',\n      genre: '',\n      director: '',\n      inputsValidation: {\n        'year': true,\n        'runtime': true,\n        'genre': true,\n        'director': true\n      },\n      isValid: true\n    };\n    return _this;\n  }\n\n  _createClass(Buttons, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        \"imdbID\": this.props.item.imdbID,\n        year: this.props.item.Year,\n        runtime: this.props.item.Runtime,\n        genre: this.props.item.Genre,\n        director: this.props.item.Director\n      });\n    }\n  }, {\n    key: \"_setOpenModalKey\",\n    value: function _setOpenModalKey(key) {\n      this.props.setOpenModalKey(key);\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(id) {\n      var newDatas = this._setDataToUpdate();\n\n      var newDataToMerge = {\n        id: id,\n        year: this.state.year,\n        runtime: this.state.runtime,\n        genre: this.state.genre,\n        director: this.state.director\n      };\n      var newData = Object.assign(this.props.item, newDataToMerge);\n      this.props.update(newDatas, newData, id);\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete(id) {\n      var newDatas = this._setDataAfterDelete();\n\n      this.props.deleteMovie(newDatas, id);\n    }\n  }, {\n    key: \"_setDataToUpdate\",\n    value: function _setDataToUpdate() {\n      var currentData = this.props.general.moviesList;\n\n      for (var i = 0; i < currentData.length; ++i) {\n        var movie = currentData[i];\n\n        if (movie.imdbID === this.state.imdbID) {\n          movie.Year = this.state.year;\n          movie.Runtime = this.state.runtime;\n          movie.Genre = this.state.genre;\n          movie.Director = this.state.director;\n        }\n      }\n\n      return currentData;\n    }\n  }, {\n    key: \"_setDataAfterDelete\",\n    value: function _setDataAfterDelete() {\n      var _this2 = this;\n\n      var currentData = this.props.general.moviesList;\n      return currentData.filter(function (item, index) {\n        return item.imdbID != _this2.state.imdbID;\n      });\n    }\n  }, {\n    key: \"_validation\",\n    value: function _validation(inputCheck) {\n      var validationObj = {\n        'year': function year(val) {\n          return Functions.yearValidation(val);\n        },\n        'runtime': function runtime(val) {\n          return Functions.runtimeValidation(val);\n        },\n        'genre': function genre(val) {\n          return Functions.genreValidation(val);\n        },\n        'director': function director(val) {\n          return Functions.directorValidation(val);\n        }\n      };\n      var InputValidation = validationObj[inputCheck](this.refs[inputCheck].value);\n      var inputsValidation = this.state.inputsValidation; //all inputs validation\n\n      if (InputValidation.status == 'error') {\n        this.refs[inputCheck].classList.add('invalid');\n        inputsValidation[inputCheck] = false;\n        this.setState({\n          isValid: false,\n          inputsValidation: inputsValidation\n        });\n      } else if (InputValidation.status == 'ok') {\n        if (this.refs[inputCheck].className.includes('invalid')) {\n          this.refs[inputCheck].classList.remove('invalid');\n          inputsValidation[inputCheck] = true;\n          this.setState({\n            isValid: true,\n            inputsValidation: inputsValidation\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_getRuntime\",\n    value: function _getRuntime() {\n      var runtime = this.state.runtime.split(' ');\n      return runtime[0];\n    }\n  }, {\n    key: \"_getGenreOrDirector\",\n    value: function _getGenreOrDirector(inputType) {\n      var input = this.state[inputType].split(',');\n      input.forEach(function (item, index) {\n        if (item.charAt(0) == ' ') {\n          input[index] = item.substr(1);\n        }\n\n        input[index] = Functions.capitalizeFirstLetter(input[index]);\n      });\n      return input.toString();\n    }\n  }, {\n    key: \"_renderButtons\",\n    value: function _renderButtons() {\n      var _this3 = this;\n\n      try {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"btnContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#update\",\n          onClick: function onClick() {\n            return _this3._setOpenModalKey(_this3.props.index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"update\")), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#delete\",\n          onClick: function onClick() {\n            return _this3.props.setOpenModalKey(_this3.props.index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Delete\"))), React.createElement(\"div\", {\n          className: \"modal\",\n          id: \"update\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"modal-dialog\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"modal-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"modal-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"modal-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Update Movie Details\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          \"data-dismiss\": \"modal\",\n          onClick: function onClick() {\n            return _this3.props.setOpenModalKey(-99);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \"\\xD7\")), React.createElement(\"div\", {\n          className: \"modal-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, 'Year: ', \" \"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"year\",\n          value: this.state.year,\n          ref: \"year\",\n          onChange: function onChange(e) {\n            _this3._validation('year');\n\n            _this3.setState({\n              'year': _this3.refs.year.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }), !this.state.inputsValidation['year'] && React.createElement(\"span\", {\n          className: \"error-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"Oops! Input invalid!\")), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, 'Runtime (Minutes): '), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"runtime\",\n          value: this._getRuntime(),\n          ref: \"runtime\",\n          onChange: function onChange(e) {\n            _this3._validation('runtime');\n\n            _this3.setState({\n              'runtime': e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }), !this.state.inputsValidation['runtime'] && React.createElement(\"span\", {\n          className: \"error-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Oops! Input invalid!\")), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, 'Genre: '), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"genre\",\n          value: this._getGenreOrDirector('genre'),\n          ref: \"genre\",\n          onChange: function onChange(e) {\n            _this3._validation('genre');\n\n            _this3.setState({\n              'genre': e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }), !this.state.inputsValidation['genre'] && React.createElement(\"span\", {\n          className: \"error-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Oops! Input invalid!\")), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, 'Director: '), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"director\",\n          value: this._getGenreOrDirector('director'),\n          ref: \"director\",\n          onChange: function onChange(e) {\n            _this3._validation('director');\n\n            _this3.setState({\n              'director': e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }), !this.state.inputsValidation['director'] && React.createElement(\"span\", {\n          className: \"error-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"Oops! Input invalid!\"))), React.createElement(\"div\", {\n          className: \"modal-footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          \"data-dismiss\": this.state.isValid ? \"modal\" : '',\n          onClick: function onClick() {\n            if (_this3.state.isValid) {\n              _this3.props.setOpenModalKey(-99);\n\n              _this3._update(_this3.props.item.id);\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \"Update\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          \"data-dismiss\": \"modal\",\n          onClick: function onClick() {\n            return _this3.props.setOpenModalKey(-99);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"Close\"))))), React.createElement(\"div\", {\n          className: \"modal\",\n          id: \"delete\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"modal-dialog\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"modal-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"modal-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"modal-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, \"Delete Movie Details\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          \"data-dismiss\": \"modal\",\n          onClick: function onClick() {\n            return _this3.props.setOpenModalKey(-99);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"\\xD7\")), React.createElement(\"div\", {\n          className: \"modal-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"modal-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, \"Are you sure you want delete this movie\")), React.createElement(\"div\", {\n          className: \"modal-footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          \"data-dismiss\": this.state.isValid ? \"modal\" : '',\n          onClick: function onClick() {\n            _this3.props.setOpenModalKey(-99);\n\n            _this3._delete(_this3.props.item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"yes\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          \"data-dismiss\": \"modal\",\n          onClick: function onClick() {\n            return _this3.props.setOpenModalKey(-99);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \"no\"))))));\n      } catch (err) {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this._renderButtons();\n    }\n  }]);\n\n  return Buttons;\n}(Component);\n\nexport default Buttons;","map":{"version":3,"sources":["C:\\Users\\shalombar\\Desktop\\moviesLibrary\\my-app\\src\\common\\Movies\\movie\\MovieDetails\\Buttons.js"],"names":["React","Component","Functions","Buttons","props","state","year","runtime","genre","director","inputsValidation","isValid","setState","item","imdbID","Year","Runtime","Genre","Director","key","setOpenModalKey","id","newDatas","_setDataToUpdate","newDataToMerge","newData","Object","assign","update","_setDataAfterDelete","deleteMovie","currentData","general","moviesList","i","length","movie","filter","index","inputCheck","validationObj","val","yearValidation","runtimeValidation","genreValidation","directorValidation","InputValidation","refs","value","status","classList","add","className","includes","remove","split","inputType","input","forEach","charAt","substr","capitalizeFirstLetter","toString","_setOpenModalKey","e","_validation","_getRuntime","target","_getGenreOrDirector","_update","_delete","err","_renderButtons"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../../../../css/movies/movies.css';\r\nimport * as Functions from '../../../functions/functions'\r\n\r\nclass Buttons extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"imdbID\": '',\r\n            year: '',\r\n            runtime: '',\r\n            genre: '',\r\n            director: '',\r\n            inputsValidation: { 'year': true, 'runtime': true, 'genre': true, 'director': true },\r\n            isValid: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            \"imdbID\": this.props.item.imdbID,\r\n            year: this.props.item.Year,\r\n            runtime: this.props.item.Runtime,\r\n            genre: this.props.item.Genre,\r\n            director: this.props.item.Director,\r\n        })\r\n    }\r\n\r\n    _setOpenModalKey(key) {\r\n        this.props.setOpenModalKey(key)\r\n    }\r\n\r\n    _update(id) {\r\n        let newDatas = this._setDataToUpdate();\r\n        let newDataToMerge = {\r\n            id: id,\r\n            year: this.state.year,\r\n            runtime: this.state.runtime,\r\n            genre: this.state.genre,\r\n            director: this.state.director,\r\n        }\r\n        let newData = Object.assign(this.props.item, newDataToMerge);\r\n\r\n        this.props.update(newDatas, newData, id);\r\n    }\r\n\r\n    _delete(id) {\r\n        let newDatas = this._setDataAfterDelete();\r\n        this.props.deleteMovie(newDatas, id);\r\n    }\r\n\r\n    _setDataToUpdate() {\r\n        let currentData = this.props.general.moviesList;\r\n\r\n        for (var i = 0; i < currentData.length; ++i) {\r\n            let movie = currentData[i];\r\n\r\n            if (movie.imdbID === this.state.imdbID) {\r\n                movie.Year = this.state.year;\r\n                movie.Runtime = this.state.runtime;\r\n                movie.Genre = this.state.genre;\r\n                movie.Director = this.state.director;\r\n            }\r\n        }\r\n\r\n        return currentData;\r\n    }\r\n\r\n    _setDataAfterDelete() {\r\n        let currentData = this.props.general.moviesList;\r\n        return currentData.filter((item, index) => {\r\n            return item.imdbID != this.state.imdbID\r\n        })\r\n    }\r\n\r\n    _validation(inputCheck) {\r\n        let validationObj = {\r\n            'year': (val) => Functions.yearValidation(val),\r\n            'runtime': (val) => Functions.runtimeValidation(val),\r\n            'genre': (val) => Functions.genreValidation(val),\r\n            'director': (val) => Functions.directorValidation(val),\r\n        }\r\n\r\n        let InputValidation = validationObj[inputCheck](this.refs[inputCheck].value);\r\n        let { inputsValidation } = this.state;//all inputs validation\r\n\r\n        if (InputValidation.status == 'error') {\r\n            this.refs[inputCheck].classList.add('invalid');\r\n            inputsValidation[inputCheck] = false;\r\n            this.setState({ isValid: false, inputsValidation });\r\n        }\r\n        else if (InputValidation.status == 'ok') {\r\n            if (this.refs[inputCheck].className.includes('invalid')) {\r\n                this.refs[inputCheck].classList.remove('invalid');\r\n                inputsValidation[inputCheck] = true;\r\n                this.setState({ isValid: true, inputsValidation })\r\n            }\r\n        }\r\n    }\r\n\r\n    _getRuntime() {\r\n        let runtime = this.state.runtime.split(' ');\r\n\r\n        return runtime[0];\r\n    }\r\n\r\n    _getGenreOrDirector(inputType) {\r\n        let input = this.state[inputType].split(',');\r\n\r\n        input.forEach((item, index) => {\r\n            if (item.charAt(0) == ' ') {\r\n                input[index] = item.substr(1);\r\n            }\r\n            input[index] = Functions.capitalizeFirstLetter(input[index])\r\n        });\r\n\r\n        return input.toString();\r\n    }\r\n\r\n    _renderButtons() {\r\n        try {\r\n            return (\r\n                <div className=\"container\">\r\n                    {/* Button to Open the Modal  */}\r\n                    <div className=\"btnContainer\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#update\" onClick={() => this._setOpenModalKey(this.props.index)}>\r\n                            <span>update</span>\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#delete\" onClick={() => this.props.setOpenModalKey(this.props.index)}><span>Delete</span></button>\r\n                    </div >\r\n\r\n                    {/* The update Modal  */}\r\n                    <div className=\"modal\" id=\"update\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n\r\n                                {/* Modal Header */}\r\n                                <div className=\"modal-header\">\r\n                                    <h4 className=\"modal-title\">Update Movie Details</h4>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => this.props.setOpenModalKey(-99)}>&times;</button>\r\n                                </div>\r\n\r\n                                {/* Modal body  */}\r\n                                <div className=\"modal-body\">\r\n                                    <div><span>{'Year: '} </span><input type=\"text\" name=\"year\" value={this.state.year} ref='year' onChange={(e) => { this._validation('year'); this.setState({ 'year': this.refs.year.value }); }}></input>{!this.state.inputsValidation['year'] && <span className=\"error-message\">Oops! Input invalid!</span>}</div>\r\n                                    <div><span>{'Runtime (Minutes): '}</span><input type=\"text\" name=\"runtime\" value={this._getRuntime()} ref='runtime' onChange={(e) => { this._validation('runtime'); this.setState({ 'runtime': e.target.value }) }}></input>{!this.state.inputsValidation['runtime'] && <span className=\"error-message\">Oops! Input invalid!</span>}</div>\r\n                                    <div><span>{'Genre: '}</span><input type=\"text\" name=\"genre\" value={this._getGenreOrDirector('genre')} ref='genre' onChange={(e) => { this._validation('genre'); this.setState({ 'genre': e.target.value }) }}></input>{!this.state.inputsValidation['genre'] && <span className=\"error-message\">Oops! Input invalid!</span>}</div>\r\n                                    <div><span>{'Director: '}</span><input type=\"text\" name=\"director\" value={this._getGenreOrDirector('director')} ref='director' onChange={(e) => { this._validation('director'); this.setState({ 'director': e.target.value }) }}></input>{!this.state.inputsValidation['director'] && <span className=\"error-message\">Oops! Input invalid!</span>}</div>\r\n                                </div>\r\n\r\n                                {/* Modal footer  */}\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss={this.state.isValid ? \"modal\" : ''} onClick={() => { if (this.state.isValid) { this.props.setOpenModalKey(-99); this._update(this.props.item.id) } }}>Update</button>\r\n                                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => this.props.setOpenModalKey(-99)}>Close</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* The Delete Modal  */}\r\n                    <div className=\"modal\" id=\"delete\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n\r\n                                {/* Modal Header */}\r\n                                <div className=\"modal-header\">\r\n                                    <h4 className=\"modal-title\">Delete Movie Details</h4>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => this.props.setOpenModalKey(-99)}>&times;</button>\r\n                                </div>\r\n\r\n                                {/* Modal body  */}\r\n                                <div className=\"modal-body\">\r\n                                    <h2 className=\"modal-title\">Are you sure you want delete this movie</h2>\r\n                                </div>\r\n\r\n                                {/* Modal footer  */}\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss={this.state.isValid ? \"modal\" : ''} onClick={() => { this.props.setOpenModalKey(-99); this._delete(this.props.item.id); }}>yes</button>\r\n                                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => this.props.setOpenModalKey(-99)}>no</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        catch (err) { }\r\n    }\r\n\r\n    render() {\r\n        return this._renderButtons()\r\n    }\r\n}\r\n\r\nexport default (Buttons);\r\n\r\n"]},"metadata":{},"sourceType":"module"}