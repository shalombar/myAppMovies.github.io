{"ast":null,"code":"import * as actions from '../actions/general.act';\n\nvar axios = require('axios');\n\nexport default (function (store) {\n  return function (next) {\n    return function (action) {\n      if (action.type == 'API') {\n        var SERVER_ENDPOINT = \"http://localhost:3000/moviesList\";\n        var OMDb_API = 'http://www.omdbapi.com/?apikey=81d51a00';\n        var _action$payload = action.payload,\n            type = _action$payload.type,\n            method = _action$payload.method,\n            index = _action$payload.index,\n            newData = _action$payload.newData,\n            newDatas = _action$payload.newDatas,\n            id = _action$payload.id;\n        console.log('asfasfasf', newData, index);\n        var api = {\n          'get': function get() {\n            axios.get(SERVER_ENDPOINT).then(function (res) {\n              store.dispatch(actions.api(type, res.data));\n            }).catch(function (err) {\n              return console.log(err);\n            });\n          },\n          'post': function post(newMovie) {\n            axios.post(SERVER_ENDPOINT, newMovie).then(function (res) {\n              store.dispatch(actions.api(type, newMovie));\n            }).catch(function (err) {\n              return console.log(err);\n            });\n          },\n          'put': function put() {\n            axios.put(SERVER_ENDPOINT + '/' + index + '/', newData).then(function (res) {\n              store.dispatch(actions.api(type, newDatas));\n            }).catch(function (err) {\n              return console.log(err);\n            });\n          },\n          'delete': function _delete() {\n            axios.delete(SERVER_ENDPOINT + '/' + index + '/').then(function (res) {\n              store.dispatch(actions.api(type, newDatas));\n            }).catch(function (err) {\n              return console.log(err);\n            });\n          }\n        };\n\n        if (type == 'ADD') {\n          var title = newDatas.title.replace(' ', '+');\n          axios.get(OMDb_API + '&t=' + title + '&y=' + newDatas.year).then(function (respone) {\n            var newMovie = respone.data;\n            newMovie['id'] = id;\n            api[method](newMovie);\n            console.log('OMDb_API', respone, id);\n          }).catch(function (err) {\n            return console.log(err);\n          });\n        } else {\n          api[method]();\n        }\n      }\n\n      return next(action);\n    };\n  };\n});","map":{"version":3,"sources":["C:\\Users\\shalombar\\Desktop\\moviesLibrary\\my-app\\src\\middleware\\general.mid.js"],"names":["actions","axios","require","store","next","action","type","SERVER_ENDPOINT","OMDb_API","payload","method","index","newData","newDatas","id","console","log","api","get","then","res","dispatch","data","catch","err","newMovie","post","put","delete","title","replace","year","respone"],"mappings":"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","sourcesContent":["import * as actions from '../actions/general.act'\r\nconst axios = require('axios');\r\n\r\nexport default store => next => action => {\r\n    if (action.type == 'API') {\r\n        const SERVER_ENDPOINT = \"http://localhost:3000/moviesList\";\r\n        const OMDb_API = 'http://www.omdbapi.com/?apikey=81d51a00';\r\n\r\n        let { type, method, index, newData, newDatas, id } = action.payload;\r\n\r\n        console.log('asfasfasf', newData, index)\r\n        let api = {\r\n            'get': () => {\r\n                axios.get(SERVER_ENDPOINT).then((res) => {\r\n                    store.dispatch(actions.api(type, res.data))\r\n                })\r\n                    .catch((err) => console.log(err))\r\n            },\r\n            'post': (newMovie) => {\r\n                axios.post((SERVER_ENDPOINT), newMovie).then((res) => {\r\n                    store.dispatch(actions.api(type, newMovie))\r\n                })\r\n                    .catch((err) => console.log(err))\r\n            },\r\n            'put': () => {\r\n                axios.put((SERVER_ENDPOINT + '/' + index + '/'), newData).then((res) => {\r\n                    store.dispatch(actions.api(type, newDatas))\r\n                })\r\n                    .catch((err) => console.log(err))\r\n            },\r\n            'delete': () => {\r\n                axios.delete(SERVER_ENDPOINT + '/' + index + '/').then((res) => {\r\n                    store.dispatch(actions.api(type, newDatas))\r\n                })\r\n                    .catch((err) => console.log(err))\r\n            }\r\n        }\r\n\r\n        if (type == 'ADD') {\r\n            let title = newDatas.title.replace(' ', '+');\r\n\r\n            axios.get(OMDb_API + '&t=' + title + '&y=' + newDatas.year).then((respone) => {\r\n                let newMovie = respone.data;\r\n\r\n                newMovie['id'] = id;\r\n                api[method](newMovie);\r\n\r\n                console.log('OMDb_API', respone, id)\r\n            })\r\n                .catch((err) => console.log(err))\r\n        }\r\n        else {\r\n            api[method]();\r\n\r\n        }\r\n    }\r\n    return next(action)\r\n}"]},"metadata":{},"sourceType":"module"}