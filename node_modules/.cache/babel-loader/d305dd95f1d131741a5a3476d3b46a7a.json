{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\moviesLibrary\\\\my-app\\\\src\\\\common\\\\Movies\\\\movie\\\\MovieDetails\\\\Buttons.js\";\nimport React, { Component } from 'react'; // import './App.css';\n\nvar Buttons =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Buttons, _Component);\n\n  function Buttons(props) {\n    var _this;\n\n    _classCallCheck(this, Buttons);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Buttons).call(this, props));\n    _this.state = {\n      \"imdbID\": '',\n      year: '',\n      runtime: '',\n      genre: '',\n      director: ''\n    };\n    return _this;\n  }\n\n  _createClass(Buttons, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        \"imdbID\": this.props.item.imdbID,\n        year: this.props.item.Year,\n        runtime: this.props.item.Runtime,\n        genre: this.props.item.Genre,\n        director: this.props.item.Director,\n        isValid: true\n      });\n    }\n  }, {\n    key: \"_setOpenModalKey\",\n    value: function _setOpenModalKey(key) {\n      this.props.setOpenModalKey(key);\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var newData = this._setDataToUpdate();\n\n      this.props.update(newData);\n    }\n  }, {\n    key: \"_setDataToUpdate\",\n    value: function _setDataToUpdate() {\n      var currentData = this.props.general.moviesList;\n\n      for (var i = 0; i < currentData.length; ++i) {\n        var movie = currentData[i];\n\n        if (movie.imdbID === this.state.imdbID) {\n          movie.Year = this.state.year;\n          movie.Runtime = this.state.runtime;\n          movie.Genre = this.state.genre;\n          movie.Director = this.state.director;\n        }\n      }\n\n      return currentData;\n    }\n  }, {\n    key: \"_validation\",\n    value: function _validation(inputCheck) {\n      var validationObj = {\n        'year': function year(val) {\n          if (isNaN(val) || val.length != 4) {\n            return {\n              status: 'error',\n              msg: 'year is not valid'\n            };\n          }\n\n          return {\n            status: 'ok'\n          };\n        },\n        'runtime': function runtime(val) {},\n        'genre': function genre(val) {},\n        'director': function director(val) {}\n      };\n      var InputValidation = validationObj[inputCheck](this.refs[inputCheck].value);\n\n      if (InputValidation.status == 'error') {\n        this.refs[inputCheck].classList.add('invalid');\n        this.setState({\n          isValid: false\n        });\n        return false;\n      } else if (InputValidation.status == 'ok') {\n        if (this.refs[inputCheck].className.includes('invalid')) {\n          this.refs[inputCheck].classList.remove('invalid');\n          this.setState({\n            isValid: true\n          });\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_renderButtons\",\n    value: function _renderButtons() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#update\",\n        onClick: function onClick() {\n          return _this2._setOpenModalKey(_this2.props.index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"update\"), React.createElement(\"div\", {\n        className: \"modal\",\n        id: \"update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-dialog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Update Movie Details\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        onClick: function onClick() {\n          return _this2.props.setOpenModalKey(-99);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"\\xD7\")), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, 'Year: ', \" \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"year\",\n        value: this.state.year,\n        ref: \"year\",\n        onChange: function onChange(e) {\n          _this2._validation('year');\n\n          _this2.setState({\n            'year': _this2.refs.year.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), !this._validation('year') && React.createElement(\"span\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Oops! Something went wrong!\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, 'Runtime: '), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"runtime\",\n        value: this.state.runtime,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            'runtime': e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), !this._validation('runtime') && React.createElement(\"span\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Oops! Something went wrong!\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, 'Genre: '), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"genre\",\n        value: this.state.genre,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            'genre': e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), !this._validation('genre') && React.createElement(\"span\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Oops! Something went wrong!\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, 'Director: '), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"director\",\n        value: this.state.director,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            'director': e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), !this._validation('director') && React.createElement(\"span\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Oops! Something went wrong!\"))), React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        \"data-dismiss\": this.state.isValid ? \"modal\" : '',\n        onClick: function onClick() {\n          if (_this2.state.isValid) {\n            _this2.props.setOpenModalKey(-99);\n\n            _this2._update();\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Update\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        \"data-dismiss\": \"modal\",\n        onClick: function onClick() {\n          return _this2.props.setOpenModalKey(-99);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Close\"))))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this._renderButtons();\n    }\n  }]);\n\n  return Buttons;\n}(Component);\n\nexport default Buttons;","map":{"version":3,"sources":["C:\\Users\\shalombar\\Desktop\\moviesLibrary\\my-app\\src\\common\\Movies\\movie\\MovieDetails\\Buttons.js"],"names":["React","Component","Buttons","props","state","year","runtime","genre","director","setState","item","imdbID","Year","Runtime","Genre","Director","isValid","key","setOpenModalKey","newData","_setDataToUpdate","update","currentData","general","moviesList","i","length","movie","inputCheck","validationObj","val","isNaN","status","msg","InputValidation","refs","value","classList","add","className","includes","remove","_setOpenModalKey","index","e","_validation","target","_update","_renderButtons"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import './App.css';\r\n\r\nclass Buttons extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"imdbID\": '',\r\n            year: '',\r\n            runtime: '',\r\n            genre: '',\r\n            director: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            \"imdbID\": this.props.item.imdbID,\r\n            year: this.props.item.Year,\r\n            runtime: this.props.item.Runtime,\r\n            genre: this.props.item.Genre,\r\n            director: this.props.item.Director,\r\n            isValid: true\r\n        })\r\n    }\r\n\r\n    _setOpenModalKey(key) {\r\n        this.props.setOpenModalKey(key)\r\n    }\r\n\r\n    _update() {\r\n        let newData = this._setDataToUpdate();\r\n\r\n        this.props.update(newData);\r\n    }\r\n\r\n    _setDataToUpdate() {\r\n        let currentData = this.props.general.moviesList;\r\n\r\n        for (var i = 0; i < currentData.length; ++i) {\r\n            let movie = currentData[i];\r\n\r\n            if (movie.imdbID === this.state.imdbID) {\r\n                movie.Year = this.state.year;\r\n                movie.Runtime = this.state.runtime;\r\n                movie.Genre = this.state.genre;\r\n                movie.Director = this.state.director;\r\n            }\r\n        }\r\n\r\n        return currentData;\r\n    }\r\n\r\n    _validation(inputCheck) {\r\n        let validationObj = {\r\n            'year': (val) => {\r\n                if (isNaN(val) || val.length != 4) {\r\n                    return {\r\n                        status: 'error',\r\n                        msg: 'year is not valid'\r\n                    }\r\n                }\r\n                return { status: 'ok' }\r\n            },\r\n            'runtime': (val) => {\r\n\r\n            },\r\n            'genre': (val) => {\r\n\r\n            },\r\n            'director': (val) => {\r\n\r\n            },\r\n        }\r\n        let InputValidation = validationObj[inputCheck](this.refs[inputCheck].value);\r\n\r\n        if (InputValidation.status == 'error') {\r\n            this.refs[inputCheck].classList.add('invalid');\r\n            this.setState({ isValid: false });\r\n            return false;\r\n        }\r\n        else if (InputValidation.status == 'ok') {\r\n            if (this.refs[inputCheck].className.includes('invalid')) {\r\n                this.refs[inputCheck].classList.remove('invalid');\r\n                this.setState({ isValid: true })\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _renderButtons() {\r\n        return (\r\n            <div className=\"container\">\r\n                {/* Button to Open the Modal  */}\r\n                <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#update\" onClick={() => this._setOpenModalKey(this.props.index)}>\r\n                    update\r\n                    </button>\r\n\r\n                {/* The Modal  */}\r\n                <div className=\"modal\" id=\"update\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n\r\n                            {/* Modal Header */}\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update Movie Details</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => this.props.setOpenModalKey(-99)}>&times;</button>\r\n                            </div>\r\n\r\n                            {/* Modal body  */}\r\n                            <div className=\"modal-body\">\r\n                                <div><span>{'Year: '} </span><input type=\"text\" name=\"year\" value={this.state.year} ref='year' onChange={(e) => { this._validation('year'); this.setState({ 'year': this.refs.year.value }); }}></input>{!this._validation('year') && <span className=\"error-message\">Oops! Something went wrong!</span>}</div>\r\n                                <div><span>{'Runtime: '}</span><input type=\"text\" name=\"runtime\" value={this.state.runtime} onChange={(e) => this.setState({ 'runtime': e.target.value })}></input>{!this._validation('runtime') && <span className=\"error-message\">Oops! Something went wrong!</span>}</div>\r\n                                <div><span>{'Genre: '}</span><input type=\"text\" name=\"genre\" value={this.state.genre} onChange={(e) => this.setState({ 'genre': e.target.value })}></input>{!this._validation('genre') && <span className=\"error-message\">Oops! Something went wrong!</span>}</div>\r\n                                <div><span>{'Director: '}</span><input type=\"text\" name=\"director\" value={this.state.director} onChange={(e) => this.setState({ 'director': e.target.value })}></input>{!this._validation('director') && <span className=\"error-message\">Oops! Something went wrong!</span>}</div>\r\n                            </div>\r\n\r\n                            {/* Modal footer  */}\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss={this.state.isValid ? \"modal\" : ''} onClick={() => { if (this.state.isValid) { this.props.setOpenModalKey(-99); this._update() } }}>Update</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => this.props.setOpenModalKey(-99)}>Close</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this._renderButtons()\r\n    }\r\n}\r\n\r\nexport default (Buttons);\r\n\r\n"]},"metadata":{},"sourceType":"module"}